//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Player/Input/PlayerInputAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputAction: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputAction"",
    ""maps"": [
        {
            ""name"": ""Guardian"",
            ""id"": ""3e2f7ad0-5769-4ce5-ad00-596f86153f64"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""3134c565-8cc9-489d-9165-51d3691ad04b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""86b9aabc-5210-4eb9-bd99-a2a27ef91a6d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""76f069b6-837a-4ffc-a19c-bfa507f23bee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DashAttack"",
                    ""type"": ""Button"",
                    ""id"": ""55693191-f4d4-4db1-9aeb-453e367276d6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AirStrike"",
                    ""type"": ""Button"",
                    ""id"": ""54a9dbae-d651-4470-abfa-41d7d33feae2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""7f3fbd56-f68b-4777-8ce9-74ed14ea52c2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Roll"",
                    ""type"": ""Button"",
                    ""id"": ""a86e1ee8-2e44-4ce5-95de-be242767ae25"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""03eeb33b-53a4-47a3-8659-55f0a29ea347"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Parry"",
                    ""type"": ""Button"",
                    ""id"": ""c8cb68fb-fd70-4084-83c4-565d995c73fa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ThirdAttack"",
                    ""type"": ""Button"",
                    ""id"": ""255b6f87-1368-4cfc-ab84-03cf4477407c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""f783ca2a-c4dc-43dc-b7b4-ab8f9fa90380"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""27d1980b-65f1-4381-8467-833e48dfbded"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""05b51fac-fabb-4bdc-a395-67ca9219af95"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""df178c8a-f821-4bda-b2be-ebab30d326dd"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5b421e7a-a3f5-4736-abed-90dd4c19c71d"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""38191dc6-252e-4d82-956f-16057360a81c"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""64db5595-3823-4f60-8d73-250418123200"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6455ca97-59af-49f3-b8ff-d3c73d497df2"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Hold(duration=0.2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DashAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e7fcf772-9b73-4941-bbe5-d69efd7b87c0"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AirStrike"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ffd8e4bb-50e6-40c3-9df5-15db76b4eb8a"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7f08639e-da90-4c2e-9067-6987b41f9125"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5f6e7c99-94c6-4735-ae76-610d8f85623b"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Parry"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c8e3408e-342d-4494-b7fc-e77755ce22ea"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""MultiTap(tapDelay=0.5,tapCount=3)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThirdAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""51ba7a73-d9a3-4f09-b871-757191b4b650"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Guardian
        m_Guardian = asset.FindActionMap("Guardian", throwIfNotFound: true);
        m_Guardian_Movement = m_Guardian.FindAction("Movement", throwIfNotFound: true);
        m_Guardian_Jump = m_Guardian.FindAction("Jump", throwIfNotFound: true);
        m_Guardian_Attack = m_Guardian.FindAction("Attack", throwIfNotFound: true);
        m_Guardian_DashAttack = m_Guardian.FindAction("DashAttack", throwIfNotFound: true);
        m_Guardian_AirStrike = m_Guardian.FindAction("AirStrike", throwIfNotFound: true);
        m_Guardian_Interact = m_Guardian.FindAction("Interact", throwIfNotFound: true);
        m_Guardian_Roll = m_Guardian.FindAction("Roll", throwIfNotFound: true);
        m_Guardian_Pause = m_Guardian.FindAction("Pause", throwIfNotFound: true);
        m_Guardian_Parry = m_Guardian.FindAction("Parry", throwIfNotFound: true);
        m_Guardian_ThirdAttack = m_Guardian.FindAction("ThirdAttack", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Guardian
    private readonly InputActionMap m_Guardian;
    private List<IGuardianActions> m_GuardianActionsCallbackInterfaces = new List<IGuardianActions>();
    private readonly InputAction m_Guardian_Movement;
    private readonly InputAction m_Guardian_Jump;
    private readonly InputAction m_Guardian_Attack;
    private readonly InputAction m_Guardian_DashAttack;
    private readonly InputAction m_Guardian_AirStrike;
    private readonly InputAction m_Guardian_Interact;
    private readonly InputAction m_Guardian_Roll;
    private readonly InputAction m_Guardian_Pause;
    private readonly InputAction m_Guardian_Parry;
    private readonly InputAction m_Guardian_ThirdAttack;
    public struct GuardianActions
    {
        private @PlayerInputAction m_Wrapper;
        public GuardianActions(@PlayerInputAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Guardian_Movement;
        public InputAction @Jump => m_Wrapper.m_Guardian_Jump;
        public InputAction @Attack => m_Wrapper.m_Guardian_Attack;
        public InputAction @DashAttack => m_Wrapper.m_Guardian_DashAttack;
        public InputAction @AirStrike => m_Wrapper.m_Guardian_AirStrike;
        public InputAction @Interact => m_Wrapper.m_Guardian_Interact;
        public InputAction @Roll => m_Wrapper.m_Guardian_Roll;
        public InputAction @Pause => m_Wrapper.m_Guardian_Pause;
        public InputAction @Parry => m_Wrapper.m_Guardian_Parry;
        public InputAction @ThirdAttack => m_Wrapper.m_Guardian_ThirdAttack;
        public InputActionMap Get() { return m_Wrapper.m_Guardian; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GuardianActions set) { return set.Get(); }
        public void AddCallbacks(IGuardianActions instance)
        {
            if (instance == null || m_Wrapper.m_GuardianActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GuardianActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Attack.started += instance.OnAttack;
            @Attack.performed += instance.OnAttack;
            @Attack.canceled += instance.OnAttack;
            @DashAttack.started += instance.OnDashAttack;
            @DashAttack.performed += instance.OnDashAttack;
            @DashAttack.canceled += instance.OnDashAttack;
            @AirStrike.started += instance.OnAirStrike;
            @AirStrike.performed += instance.OnAirStrike;
            @AirStrike.canceled += instance.OnAirStrike;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @Roll.started += instance.OnRoll;
            @Roll.performed += instance.OnRoll;
            @Roll.canceled += instance.OnRoll;
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
            @Parry.started += instance.OnParry;
            @Parry.performed += instance.OnParry;
            @Parry.canceled += instance.OnParry;
            @ThirdAttack.started += instance.OnThirdAttack;
            @ThirdAttack.performed += instance.OnThirdAttack;
            @ThirdAttack.canceled += instance.OnThirdAttack;
        }

        private void UnregisterCallbacks(IGuardianActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Attack.started -= instance.OnAttack;
            @Attack.performed -= instance.OnAttack;
            @Attack.canceled -= instance.OnAttack;
            @DashAttack.started -= instance.OnDashAttack;
            @DashAttack.performed -= instance.OnDashAttack;
            @DashAttack.canceled -= instance.OnDashAttack;
            @AirStrike.started -= instance.OnAirStrike;
            @AirStrike.performed -= instance.OnAirStrike;
            @AirStrike.canceled -= instance.OnAirStrike;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @Roll.started -= instance.OnRoll;
            @Roll.performed -= instance.OnRoll;
            @Roll.canceled -= instance.OnRoll;
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
            @Parry.started -= instance.OnParry;
            @Parry.performed -= instance.OnParry;
            @Parry.canceled -= instance.OnParry;
            @ThirdAttack.started -= instance.OnThirdAttack;
            @ThirdAttack.performed -= instance.OnThirdAttack;
            @ThirdAttack.canceled -= instance.OnThirdAttack;
        }

        public void RemoveCallbacks(IGuardianActions instance)
        {
            if (m_Wrapper.m_GuardianActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGuardianActions instance)
        {
            foreach (var item in m_Wrapper.m_GuardianActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GuardianActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GuardianActions @Guardian => new GuardianActions(this);
    public interface IGuardianActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnDashAttack(InputAction.CallbackContext context);
        void OnAirStrike(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnRoll(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnParry(InputAction.CallbackContext context);
        void OnThirdAttack(InputAction.CallbackContext context);
    }
}
